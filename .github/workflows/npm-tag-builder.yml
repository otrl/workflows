
name: npm tag builder

on: 
  workflow_call:
    inputs:
      node_version:
        required: true
        type: string
      cache_directory:
        required: true
        type: string
      command1:
        required: true
        type: string
      command2:
        required: false
        type: string        
      repo_name:
        required: true
        type: string         
    secrets:
      ssh_private_key:
        required: false
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      ecr_repo:
        required: true        
      docker_password:
        required: true
      docker_username:
        required: true
      

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          
      - name: Bump version and push tag
        uses: otrl/github-tag-action@v1.3
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          DEFAULT_BUMP: patch
          VERBOSE: true
          
      - name: Create release
        uses: otrl/github-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      - name: set docker tag
        run: echo "GIT_TAG=`echo $(git tag --sort=committerdate | tail -1)`" >> $GITHUB_ENV

      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:          
          path: ${{ inputs.cache_directory }}    
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
          
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.ssh_private_key }}          

      - name: run npm command 1
        run: ${{ inputs.command1 }}

      - name: run npm command 2
        if: len(${{ inputs.command2 }})
        run: ${{ inputs.command2 }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: build the docker file
        run: |
          set -e
          docker build -t ${{ inputs.repo_name }} .
          
      - name: tag and push the docker image
        run: |
          set -e
          docker tag ${{ inputs.repo_name }} ${{ inputs.repo_name }}:$GIT_TAG
          docker push ${{ inputs.repo_name }}:$GIT_TAG          
       
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.aws_access_key_id }}
#          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
#          aws-region: eu-west-2
          
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1.6.0   
        
#      - name: tag and push the aws ecr image
#        run: |
#          set -e
#          docker tag ${{ inputs.repo_name }}:$GIT_TAG ${{ secrets.ecr_repo }}${{ inputs.repo_name }}:$GIT_TAG
#          docker push ${{ secrets.ecr_repo }}${{ inputs.repo_name }}:$GIT_TAG
