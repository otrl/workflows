

name: build scala containers and publish them to aws ecr

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      scala_version:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      ecr_repo:
        required: true
      artifactory_user:
        required: false
      artifactory_pass:
        required: false

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    env:
      ARTIFACTORY_USER: ${{ secrets.artifactory_user }}
      ARTIFACTORY_PASS: ${{ secrets.artifactory_pass }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java_version }}
          cache: 'sbt'

      - name: Setup sbt launcher
        uses: sbt/setup-sbt@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build and test the image
        run: sbt ++${{ inputs.scala_version }} clean coverage test coverageOff docker:publishLocal

      - name: list images
        run: docker image ls

      - name: Push PR to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          PULL_TAG="pull-${{ github.event.number }}" 
          # Build a docker container and push it to ECR 
          echo "Pushing image to ECR..."
          docker tag ${{ inputs.repo_name }} ${{ secrets.ecr_repo }}${{ inputs.repo_name }}:${PULL_TAG}
          docker push ${{ secrets.ecr_repo }}${{ inputs.repo_name }}:${PULL_TAG}
