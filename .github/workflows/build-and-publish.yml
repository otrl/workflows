name: build scala containers and publish them to docker cloud

permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  id-token: read
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read

on: 
    workflow_call:
        inputs:
            scala_version:
                required: true
                type: string
            java_version:
                required: true
                type: string
            DOCKER_REPO:            
                required: true
                type: string
        secrets:
            ARTIFACTORY_USER:
                required: true
            ARTIFACTORY_PASS:
                required: true
            DOCKER_USER:
                required: true
            DOCKER_PASSWORD:
                required: true


  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          cache: 'sbt'
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and test
        run: sbt ++${{ inputs.SCALA_VERSION }} clean coverage test coverageOff docker:publishLocal

      - name: Docker Push PR
        env:
          DOCKER_REPO: ${{ inputs.DOCKER_REPO }}
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -e
          PULL_TAG="pull-${{ github.event.number }}"          
          docker tag $DOCKER_REPO $DOCKER_REPO:${PULL_TAG} 
          docker push $DOCKER_REPO:${PULL_TAG}
          
      - name: Docker Push Tag
        if: ${{ github.ref_type == 'tag' }}
        run: |
          set -e
          for tag in ${{ github.ref_name }} latest; do
            docker tag $DOCKER_REPO $DOCKER_REPO:${tag} && docker push $DOCKER_REPO:${tag}
          done
