name: build scala pull request containers and publish them to docker cloud

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      scala_version:
        required: true
        type: string
      repo_name:
        required: true
        type: string
      runs_on:
        required: false
        default: "ubuntu-22.04"
        type: string
      sbt_service_prefix:
        required: false
        default: ""
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
      artifactory_user:
        required: false
      artifactory_pass:
        required: false


jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs_on }}
    env:
      ARTIFACTORY_USER: ${{ secrets.artifactory_user }}
      ARTIFACTORY_PASS: ${{ secrets.artifactory_pass }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java_version }}
          cache: 'sbt'

      - name: Setup sbt launcher
        uses: sbt/setup-sbt@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: build and test the image
        if: ${{ inputs.sbt_service_prefix == '' }}
        run: |
          set -e
          sbt ++${{ inputs.scala_version }} clean test docker:publishLocal

      - name: build and test the image with sbt service prefix
        if: ${{ inputs.sbt_service_prefix != '' }}
        run: |
          set -e
          sbt ++${{ inputs.scala_version }} ${{ inputs.sbt_service_prefix }}/clean ${{ inputs.sbt_service_prefix }}/test ${{ inputs.sbt_service_prefix }}/docker:publishLocal

      - name: list images
        run: docker image ls

      - name: Docker Push PR to docker cloud
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -e
          PULL_TAG="pull-${{ github.event.number }}"          
          docker tag ${{ inputs.repo_name }} ${{ inputs.repo_name }}:${PULL_TAG} 
          docker push ${{ inputs.repo_name }}:${PULL_TAG}
          
