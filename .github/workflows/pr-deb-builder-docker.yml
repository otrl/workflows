name: build scala pull request containers and publish them to docker cloud

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      scala_version:
        required: true
        type: string
      repo_name:
        required: true
        type: string
      service_name:
        required: true
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
      artifactory_user:
        required: false
      artifactory_pass:
        required: false


jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest-4-cores
    env:
      ARTIFACTORY_USER: ${{ secrets.artifactory_user }}
      ARTIFACTORY_PASS: ${{ secrets.artifactory_pass }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java_version }}
          cache: 'sbt'

      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: set package version
        run: |
          set -e
          echo "AVERSION=`echo $(git tag --sort=committerdate | tail -1)`" >> $GITHUB_ENV

      - name: mess with environmentals
        run: |
          set -e
          echo "DEBVERSION=$AVERSION-$RANDOM" >> $GITHUB_ENV          

      - name : find the build file
        run: |
          ls
          pwd

      - name: cat sbt build file
        run: |
          set -e
          cat build.sbt

      - name: edit the build file
        run: sed -i "s/LATEST/$DEBVERSION/g" /home/runner/work/${{ inputs.service_name }}/${{ inputs.service_name }}/build.sbt

      - name: read the file again
        run: cat /home/runner/work/${{ inputs.service_name }}/${{ inputs.service_name }}/build.sbt

      - name: build and test the deb file
        run: |
          set -e
          sbt ++${{ inputs.scala_version }} test warn debian:packageBin
          echo "Revised Package Version $DEBVERSION"

      - name: add the base image to the dockerfile
        run: |
          set -e
          sed -i "1s;^;FROM otrl/oraclejdk-8-base:jan2022v3;g" ./Dockerfile

      - name: build the docker file
        run: |
          set -e
          docker build --build-arg version=$DEBVERSION -t ${{ inputs.repo_name }} .

      - name: list images
        run: docker image ls

      - name: Docker Push PR to docker cloud
        run: |
          set -e
          PULL_TAG="pull-${{ github.event.number }}"          
          docker tag ${{ inputs.repo_name }} ${{ inputs.repo_name }}:${PULL_TAG} 
          docker push ${{ inputs.repo_name }}:${PULL_TAG}
