name: build scala pull request containers and publish them to docker cloud

on: 
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      scala_version:
        required: true
        type: string
      repo_name:
        required: true
        type: string 
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
      artifactory_user:
        required: false
      artifactory_pass:
        required: false
        
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    env:
      ARTIFACTORY_USER: ${{ secrets.artifactory_user }}
      ARTIFACTORY_PASS: ${{ secrets.artifactory_pass }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: ${{ inputs.java_version }}
          cache: 'sbt'
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}    
          
      - name: set package version 
        run: |
          set -e
          echo "DEBVERSION=`echo $(git tag --sort=committerdate | tail -1)`" >> $GITHUB_ENV
          sed -i 's/LATEST/$DEBVERSiON/g' build.sbt
  
      - name: cat sbt build file
        run: |
          set -e
          cat build.sbt
        
      - name: build and test the deb file
        run: |
          set -e
          sbt ++${{ inputs.scala_version }} test warn debian:packageBin
          version=$(find target/fulfilment*.deb | grep -oP 'fulfilment_\K(.*)(?=_all.deb)') >> $GITHUB_ENV
          echo "Built version $version"
          echo "Revised Package Version $DEBVERSION"
          
      - name: build the docker file
        run: |
          set -e
          docker build --build-arg version=$DEBVERSION -t fulfilment .
          
      - name: list images 
        run: docker image ls
        
      - name: Docker Push PR to docker cloud
        run: |
          set -e
          PULL_TAG="pull-${{ github.event.number }}"          
          docker tag ${{ inputs.repo_name }} ${{ inputs.repo_name }}:${PULL_TAG} 
          docker push ${{ inputs.repo_name }}:${PULL_TAG}
